# Load local bashrc if there is any
if [ -f ~/.bashrc.local ]; then
    source ~/.bashrc.local
fi


# @reference    Bash hostname completion
#               https://sanctum.geek.nz/arabesque/bash-hostname-completion/
# Use a private mock hosts(5) file for completion
HOSTFILE=$HOME/.hosts
# Set hostname completion as the default method for all sorts of network-poking tools,
# falling back on the usual filename completion if nothing matches with -o default
complete -A hostname -o default curl dig host netcat ping telnet


# @reference    bash 4.2 $variable expansion bug
#               https://nelsonslog.wordpress.com/2012/01/29/bash-4-2-variable-expansion-bug/
# To make Bash replaces directory names with the results of word expansion when performing filename completion.
shopt -s direxpand


# Git autocomplete
if [ -f ~/.git-completion.sh ]; then
    source ~/.git-completion.sh
fi

# Git show git branch on command promt
if [ -f ~/.git-prompt.sh ]; then
    source ~/.git-prompt.sh
    # Show git state symbols
    GIT_PS1_SHOWDIRTYSTATE=1
    GIT_PS1_SHOWUNTRACKEDFILES=1
    GIT_PS1_SHOWCOLORHINTS=true
fi

PS1_PREFIX='\[\e[0;92m\][\[\e[0;95m\]\t \[\e[0;92m\]\u@\h\[\e[0;93m\] \w\[\e[0;92m\]]\[\e[0;94m\]$(__git_ps1 "(%s)")\[\e[0m\]'
PS1="$PS1_PREFIX$ "
# VIM :shell
test -n "$VIMRUNTIME" && PS1="$PS1_PREFIX\e[30m(vim)\e[0m$ "

# Determine the editor that programs such as less and mail clients invoke
# when asked to edit a file.
export EDITOR=vim
export VISUAL=vim


# The default text file viewer for programs such as man.
export PAGER=less


# @reference    Terminal annoyances
#               https://sanctum.geek.nz/arabesque/terminal-annoyances/
# @reference    Getting stty: standard input: Inappropriate ioctl for device when using scp through an ssh tunnel
#               https://stackoverflow.com/questions/24623021/getting-stty-standard-input-inappropriate-ioctl-for-device-when-using-scp-thro
# Turn flow control off completely
[[ $- == *i* ]] && stty -ixon


# Enable ccache
if which ccache &> /dev/null; then
    export CC="ccache gcc"
    export CXX="ccache g++"
fi


# Enable distcc
#if which distcc &> /dev/null; then
#    export CCACHE_PREFIX="distcc"
#fi


# Don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth
# Append to the history file, don't overwrite it
shopt -s histappend
# History sizes
HISTSIZE=10000
HISTFILESIZE=15000


# This will correct minor spelling errors in a cd command
shopt -s cdspell
# If set, Bash attempts spelling correction on directory names during word completion if the directory name initially supplied does not exist.
shopt -s dirspell


# Covert the debug print of a protobuf string field to hex
#   Example:
#       $ to_hex ']\370\032-h\026\000'
#       5d f8 1a 2d 68 16 00
if type to_hex &> /dev/null; then
    echo "ERROR: function name already taken: to_hex()" 1>&2
else
    to_hex() {
        echo -ne $(echo $1 | sed -E 's/\\([0-9]{3})/\\0\1/g') | od -A n -t x1
    }
fi


# Convert date to UTC
# Example:
#   1)  #epoch to UTC
#       $ to_utc 1483724853
#       Fri Jan  6 17:47:33 UTC 2017
#   2)  #epoch milliseconds to UTC
#       $ to_utc 1483724853236
#       Fri Jan  6 17:47:33 UTC 2017
#   3)  #UTC now
#       $ to_utc
#       Thu Jan 12 01:45:15 UTC 2017
#   4)  #static time to UTC
#       $ date
#       Wed Jan 11 17:46:10 PST 2017
#       $ to_utc "Wed Jan 11 17:46:10 PST 2017"
#       Thu Jan 12 01:46:10 UTC 2017
if type to_utc &> /dev/null; then
    echo "ERROR: function name already taken: to_utc()" 1>&2
else
    to_utc() {
        if [ $# -eq 1 ]; then
            date --utc --date "$(echo $1 | sed -E 's/^([0-9]{10})[0-9]*$/@\1/g')"
        else
            date --utc "$@"
        fi
    }
fi


# alias
alias grep='grep --line-number --color=auto'
